---
title: "NPRB2301 Sample and Data Update"
format: pdf
output-file: "NPRB2301_sample_report"
editor: visual
date: today
date-format: long
project:
  output-dir: Documents/Project_Updates/
---

```{r set-up}
#| echo: false
#| warning: false
#| output: false
libs <- c("tidyverse", "janitor", "googlesheets4", 'DiagrammeR', 'patchwork')
#, "Hmisc", "RColorBrewer", "gridExtra", "gtable", 
#          "grid", "flextable", "officer", "lubridate", "RODBC", "DBI", "gtable", "patchwork")
if(length(libs[which(libs %in% rownames(installed.packages()) == FALSE )]) > 0) {
  install.packages(libs[which(libs %in% rownames(installed.packages()) == FALSE)])}
lapply(libs, library, character.only = TRUE)
'%nin%'<-Negate('%in%') #this is a handy function
round_any = function(x, accuracy, f=floor){f(x/ accuracy) * accuracy} #note that this is specific to rounding down

spec_dat <- read_sheet('1J3IKrdptj7eS3VZj_qbxXTXorgktHXnQ_gUv1mVaxwk') %>% clean_names()

samp_spec_join <- read_sheet('1pbSRX_9vj3Xe3_vqK_psvamk18oGSH3Kb-R6NeVSQkc', sheet = 'Sample_Join') %>% clean_names()

layer_dat <- read_sheet('1j-TdYjQsN56HmBb07apldWv-TvOh1S_9T3oP6LuKoHU') %>% clean_names() %>% 
  select(sample_id, ams_id, layer_type, layer_order, methods, vial_mt_g, vial_dry_samp_g, layer_diam_mm,
         wt_to_nosams_mg, f_modern, fm_err, wt_to_sia_mg) %>% 
  left_join(samp_spec_join)

```

This report summarizes the samples available for NPRB 2301, their status and the status of laboratory processes. Updates will be made available whenever significant updates to the sample database or analytical data become available.

# Version Notes

-   NOSAMS AMS 14C results from the training layers are now available.
-   Another batch of layers sent to NOSAMS for AMS.
-   First batch of layers for stable isotopes sent to Stanford lab.

# Links and Resources

-   [github repo](https://github.com/CindyTribuzio-NOAA/PSS_Ageing) (public)
-   [Research Workspace](https://www.researchworkspace.com/login) (password protected)
-   [Google Folder](https://drive.google.com/drive/folders/1xsjlj4UVk1kSxjrBIXrRbMp6OHLY9GhE) (access controlled)

# Specimen, Sample and Layer Summaries

-   Each animal has a specimen_ID. The exception is spiny dogfish embryos, which are considered samples taken of the adult.
-   Each eye, embryo, spine, etc. has a unique sample_id, which links back to the specimen_id that that sample was taken from.
-   Each eye is further separated into layers and each layer_id links back to the sample_id (and thus, specimen_id)."N" is the nucleus, each number is the sequential layer from the center out, "R" is the remainder. Most layers will simply be numbered 1, 2...n from the smallest to largest layer.

```{r sample2layer, echo = F}
# Will only render to html. Insert it as a .png in order to render to .pdf
#library(DiagrammeR)
#mermaid("
#        graph LR
#        A[specimen_id = 107] --> B[sample_id = 306]
#        A[specimen_id = 107] --> C(sample_id = 304)
#        B --> D(layer_id = 306_N)
#        B --> E(layer_id = 306_2)
#        B --> F(layer_id = 306_3)
#        B --> G(layer_id = 306_4)
#        B --> H(layer_id = 306_R)
#        C --> I(layer_id = 304_N)
#        C --> J(layer_id = 304_R)
#        ")
```

![Specimens to samples to layers flow chart](sample_layer_flow_chart.png)

```{r changing-parameters, echo = F}

```
## Pacific sleeper sharks
```{r PSS_summary, echo = F}
#| echo: false
#| warning: false
#| output: false
PSS_dat <- spec_dat %>% 
  filter(species_common_name == "Pacific Sleeper Shark",
         !is.na(length_cm),
         !is.na(noncon_lat)|!is.na(nmfs_area))

nPSS <- nrow(PSS_dat)
nPSSeyes <- PSS_dat %>% 
  select(c(eye_l, eye_r)) %>% 
  sum(na.rm = T)
nPSSdelam <- length(unique(layer_dat$specimen_id))
nPSSgoodeye <- layer_dat %>% 
  filter(methods != "M9/M10") %>% 
  group_by(specimen_id) %>% 
  summarise(n = length(sample_id)) %>% 
  nrow()
nPSSlayers <- layer_dat %>% 
  filter(methods != "M9/M10") %>% 
  group_by(specimen_id) %>% 
  summarise(n = length(sample_id))
nPSSlayers <- sum(nPSSlayers$n)

spec_ams <- layer_dat %>% 
  filter(methods != "M9/M10") %>% 
  group_by(specimen_id, sample_id) %>% 
  summarise(nlayers = length(f_modern),
            fmodsum = sum(f_modern, na.rm = T)) %>% 
  mutate(ams_results = if_else(fmodsum >0, "Y", "N")) %>% 
  filter(ams_results == "Y") %>% 
  group_by(specimen_id) %>% 
  summarise(n_ams = length(ams_results))

spec_delam <- layer_dat %>% 
  filter(methods != "M9/M10") %>% 
  group_by(specimen_id, sample_id) %>% 
  summarise(nlayers = length(f_modern)) %>% 
  group_by(specimen_id) %>% 
  summarise(n_delam = length(sample_id))

graph_dat <- spec_dat %>% 
  filter(species_common_name == "Pacific Sleeper Shark",
         !is.na(length_cm)) %>% 
  left_join(spec_delam) %>% 
  left_join(spec_ams) %>% 
  select(specimen_id, length_cm, length_type, n_delam, n_ams, rank) %>% 
  mutate(l_bin = round_any(length_cm, 10))

all_spec <- graph_dat %>% 
  group_by(l_bin, rank) %>% 
  summarise(n_sharks = length(length_cm))

all_spec_fig <- ggplot(all_spec, aes(x = l_bin, y = n_sharks, fill = as.factor(rank)))+
  geom_bar(stat = "identity", position = 'stack')+
  labs(x = "Length Bin", y = "No. Sharks", title = "All Specimens", fill = "Rank")

ams_spec<- graph_dat %>% 
  filter(!is.na(n_ams)) %>% 
  group_by(l_bin, rank) %>% 
  summarise(n_sharks = length(length_cm))

ams_spec_fig <- ggplot(ams_spec, aes(x = l_bin, y = n_sharks, fill = as.factor(rank)))+
  geom_bar(stat = "identity", position = 'stack')+
  labs(x = "Length Bin", y = "No. Sharks", title = "AMS Specimens", fill = "Rank")

delam_spec <- graph_dat %>% 
  filter(!is.na(n_delam)) %>% 
  group_by(l_bin, rank) %>% 
  summarise(n_sharks = length(length_cm))

delam_spec_fig <- ggplot(delam_spec, aes(x = l_bin, y = n_sharks, fill = as.factor(rank)))+
  geom_bar(stat = "identity", position = 'stack')+
  labs(x = "Length Bin", y = "No. Sharks", title = "Delaminated Specimens", fill = "Rank")

rem_spec  <- graph_dat %>% 
  filter(is.na(n_delam)) %>% 
  group_by(l_bin, rank) %>% 
  summarise(n_sharks = length(length_cm))

remaining_spec_fig <- ggplot(rem_spec, aes(x = l_bin, y = n_sharks, fill = as.factor(rank)))+
  geom_bar(stat = "identity", position = 'stack')+
  labs(x = "Length Bin", y = "No. Sharks", title = "Remaining Specimens", fill = "Rank")

pr_dat <- PSS_dat %>% 
  mutate(n_eyes = eye_l + eye_r) %>% 
  filter(n_eyes == 2) %>% 
  left_join(spec_delam) %>% 
  left_join(spec_ams) %>% 
  select(specimen_id, length_cm, n_eyes, n_delam, n_ams) %>% 
  mutate(l_bin = round_any(length_cm, 10),
         rem_eye = if_else(!is.na(n_delam), n_eyes - n_delam, 2),
         category = if_else(rem_eye == 2, "None",
                            if_else(rem_eye == 1, "One", "Both"))) %>% 
  group_by(l_bin, category) %>% 
  summarise(tot_prs = length(n_eyes))
```
The below table only includes specimens with both length and haul data. There are some samples without haul data, and some without length. As data gaps get filled in, these numbers will change. Please request any other data breakdowns for future reports.

| N PSS      | N PSS eyes     | N PSS Delaminated | N PSS Layers     |
|------------|----------------|-------------------|------------------|
| `{r} nPSS` | `{r} nPSSeyes` | `{r} nPSSgoodeye` | `{r} nPSSlayers` |

For the purposes of the below graphs, all unknown length types are treated as Total Length until we resolve how to determine that. Ranks are from 1 (lowest) to 4 (highest) and described [here](https://docs.google.com/spreadsheets/d/1i5Q1b6F8m9RK7l_L5-5fmbTkJq1hisUn8w2dwogeTPs/edit?gid=0#gid=0). Rank = 1 are samples that had poor handling and may have thawed before delamination, Rank = 2 are collections with missing length or haul data, but do have at least a "source" (being who provided the sample), Rank = 3 are collections with complete data, but some uncertainties (i.e., length type), and Rank = 4 are survey collections with best chain of custody and full data available. Many specimens have not yet been attributed to a "source" in the database, this is intentional. Many of the at-sea observer provided samples did not have full data with the sample, or deck forms submitted. Some of these data gaps will be filled as we dig through at-sea observer databases, and those specimens will change from "NA" to a numerical ranking.

```{r}
#| echo: false
#| warning: false
(all_spec_fig|delam_spec_fig)/(ams_spec_fig|remaining_spec_fig)

ggplot(pr_dat, aes(x = l_bin, y = tot_prs, fill = category))+
  geom_bar(stat = "identity", position = 'stack')+
  labs(x = "Length Bin", y = "No. Sharks", title = "Paired Eye Specimens Delaminated", fill = "")
```

## Spiny dogfish
```{r}
#| echo: false
#| warning: false
#| output: false
SD_dat <- spec_dat %>% 
  filter(species_common_name == "Spiny Dogfish")
nSD <- length(unique(SD_dat$specimen_id))
nSD_wdat <- SD_dat %>% 
  filter(!is.na(length_cm)) 
nSD_wdat <- length(unique(nSD_wdat$specimen_id))

nSD_delam <- SD_dat %>% 
  filter(!is.na(length_cm)) %>% 
  left_join(layer_dat) %>% 
  filter(is.na(methods))
nSD_avail <- length(unique(nSD_delam$specimen_id))

nSD_wodat <- SD_dat %>% 
  filter(is.na(length_cm),
         !is.na(embryo_1))
nSD_wodatavail <- length(unique(nSD_wodat$specimen_id))
```

|N SD     |N SD with full data|N SD available | N SD with samples but no length|
|---------|-------------------|---------------|--------------------------------|
|`{r} nSD`| `{r} nSD_wdat`    |`{r} nSD_avail`| `{r} nSD_wodatavail`           |

There are two concerns with spiny dogfish samples:

1. Four spiny dogfish were processed before we identified potential contaminations and considered not available, however are included in the total number of spiny dogfish.
2. A subset of spiny dogfish do not have length or specific haul data (8). All of these samples do have both eyes and embryos and may still be useful for analyses between mother/offspring.

No spiny dogfish eyes have been delaminated for AMS or stable isotopes yet.

# AMS
```{r}
#| echo: false
#| warning: false
#| output: false

nAMS <- layer_dat %>% 
  filter(!is.na(f_modern))
nAMS <- length(nAMS$ams_id)
nsent<- layer_dat %>% 
  filter(!is.na(wt_to_nosams_mg))
nsent <- length(nsent$ams_id)

# get the below info from Taylor as needed
NOSAMS_used <- 9380
NOSAMS_start <- 150080
NOSAMS_rate <- 268
NOSAMS_sampleft <- (NOSAMS_start - NOSAMS_used)/NOSAMS_rate
```
|N AMS sent     | N AMS returned |N AMS samples left per budget|
|---------------|----------------|-----------------------------|
| `{r} nsent`   | `{r} nAMS`     |`{r} NOSAMS_sampleft`        |

AMS results can be found in [NPRB2301_layer_results](https://docs.google.com/spreadsheets/d/1xeHWScrJwWkeN_YV-C6euG_7G4w3u7nHjjew34BoSP0/edit?gid=1357910555#gid=1357910555).

|Date Sent      | N layers sent |N layers returned|
|---------------|---------------|-----------------|
| Mar 25, 2019  | 8             |8                |
| Aug  5, 2019  | 11            |11               |
| Sep 11, 2024  | 36            |35               | 
| Feb  6, 2025  | 70            |0                | 

# Stable Isotopes
```{r}
#| echo: false
#| warning: false
#| output: false

# no results yet, so don't know what that will look like in layer_data file
#nSIA <- layer_dat %>% 
#  filter(!is.na(wt_to_sia_mg))
#nSIA <- length(nSIA$ams_id)
nSIAsent<- layer_dat %>% 
  filter(!is.na(wt_to_sia_mg))
nSIAsent <- length(nSIAsent$ams_id)

# get the below info from Taylor as needed
SIA_used <- 0
SIA_start <- 5600
SIA_rate <- 10
SIA_sampleft <- (SIA_start - SIA_used)/SIA_rate
```
|N SIA sent     | N SIA returned |N SIA samples left per budget|
|---------------|----------------|-----------------------------|
| `{r} nSIAsent`| 0              |`{r} SIA_sampleft`           |

|Date Sent      | N layers sent |N layers returned|
|---------------|---------------|-----------------|
| Feb 10, 2025  | 81            |0                |

First batch of stable isotope samples have been sent to Stanford lab for analysis. Stay tuned for results.

# CSIAA
```{r}
#| echo: false
#| warning: false
#| output: false

# no results yet, so don't know what that will look like in layer_data file


# get the below info from Taylor as needed
CSAA_used <- 0
CSAA_start <- 14550
CSAA_rate <- 485
CSAA_sampleft <- (CSAA_start - CSAA_used)/CSAA_rate
```
|N CSIAA sent | N CSIAA returned |N CSIAA samples left per budget|
|-------------|------------------|-------------------------------|
| 0           | 0                |`{r} CSAA_sampleft`            |
